version: '3.1'
services:
  config:
    image: ecom-config-server:latest
    restart: always
    container_name: ecom-config-server
    hostname: ${CONFIG_HOSTNAME}
    environment:
      server.port: ${CONFIG_PORT}
      spring.profiles.active: ${CONFIG_SPRING_PROFILES}
    expose:
      - ${CONFIG_PORT}
    ports:
      - ${CONFIG_PORT}:${CONFIG_PORT}
    networks:
      - ecom-network
  discovery:
    image: ecom-discovery-server:latest
    restart: always
    container_name: ecom-discovery-server
    hostname: ${DISCOVERY_HOSTNAME}
    depends_on:
      - config
    environment:
      server.port: ${DISCOVERY_PORT}
      spring.profiles.active: ${DISCOVERY_SPRING_PROFILES}
      CONFIG_SERVER_ADDRESS: ${CONFIG_HOSTNAME}
      CONFIG_SERVER_PORT: ${CONFIG_PORT}
    expose:
      - ${DISCOVERY_PORT}
    ports:
      - ${DISCOVERY_PORT}:${DISCOVERY_PORT}
    networks:
      - ecom-network
  gateway:
    image: ecom-gateway-server:latest
    restart: always
    container_name: ecom-gateway-server
    hostname: ${GATEWAY_HOSTNAME}
    depends_on:
      - config
      - mongo
    environment:
      server.port: ${GATEWAY_PORT}
      spring.profiles.active: ${GATEWAY_SPRING_PROFILES}
      CONFIG_SERVER_ADDRESS: ${CONFIG_HOSTNAME}
      CONFIG_SERVER_PORT: ${CONFIG_PORT}
      DISCOVERY_SERVER_ADDRESS: ${DISCOVERY_HOSTNAME}
      DISCOVERY_SERVER_PORT: ${DISCOVERY_PORT}
    expose:
      - ${GATEWAY_PORT}
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
    networks:
      - ecom-network
  ui:
    image: ecom-ui-server:latest
    restart: always
    container_name: ecom-ui-server
    hostname: ${UI_HOSTNAME}
    depends_on:
      - gateway
      - user
      - keycloak
    environment:
      server.port: ${UI_PORT}
      spring.profiles.active: ${UI_SPRING_PROFILES}
      CONFIG_SERVER_ADDRESS: ${CONFIG_HOSTNAME}
      CONFIG_SERVER_PORT: ${CONFIG_PORT}
      DISCOVERY_SERVER_ADDRESS: ${DISCOVERY_HOSTNAME}
      DISCOVERY_SERVER_PORT: ${DISCOVERY_PORT}
    expose:
      - ${UI_PORT}
    ports:
      - ${UI_PORT}:${UI_PORT}
    networks:
      - ecom-network
  user:
    image: ecom-user-server:latest
    restart: always
    container_name: ecom-user-server
    hostname: ${USER_HOSTNAME}
    depends_on:
      - config
      - keycloak
    environment:
      server.port: ${USER_PORT}
      spring.profiles.active: ${USER_SPRING_PROFILES}
      CONFIG_SERVER_ADDRESS: ${CONFIG_HOSTNAME}
      CONFIG_SERVER_PORT: ${CONFIG_PORT}
      DISCOVERY_SERVER_ADDRESS: ${DISCOVERY_HOSTNAME}
      DISCOVERY_SERVER_PORT: ${DISCOVERY_PORT}
    expose:
      - ${USER_PORT}
    ports:
      - ${USER_PORT}:${USER_PORT}
    networks:
      - ecom-network
  production:
    image: ecom-production-server:latest
    restart: always
    container_name: ecom-production-server
    hostname: ${USER_HOSTNAME}
    depends_on:
      - user
    environment:
      server.port: ${PRODUCTION_PORT}
      spring.profiles.active: ${PRODUCTION_SPRING_PROFILES}
      CONFIG_SERVER_ADDRESS: ${CONFIG_HOSTNAME}
      CONFIG_SERVER_PORT: ${CONFIG_PORT}
      DISCOVERY_SERVER_ADDRESS: ${DISCOVERY_HOSTNAME}
      DISCOVERY_SERVER_PORT: ${DISCOVERY_PORT}
    expose:
      - ${PRODUCTION_PORT}
    ports:
      - ${PRODUCTION_PORT}:${PRODUCTION_PORT}
    networks:
      - ecom-network
  image:
    image: ecom-image-server:latest
    restart: always
    container_name: ecom-image-server
    hostname: ${IMAGE_HOSTNAME}
    depends_on:
      - user
    environment:
      server.port: ${IMAGE_PORT}
      spring.profiles.active: ${IMAGE_SPRING_PROFILES}
      CONFIG_SERVER_ADDRESS: ${CONFIG_HOSTNAME}
      CONFIG_SERVER_PORT: ${CONFIG_PORT}
      DISCOVERY_SERVER_ADDRESS: ${DISCOVERY_HOSTNAME}
      DISCOVERY_SERVER_PORT: ${DISCOVERY_PORT}
    expose:
      - ${IMAGE_PORT}
    ports:
      - ${IMAGE_PORT}:${IMAGE_PORT}
    networks:
      - ecom-network
  mongodb:
    image: mongo:latest
    container_name: ecom-image-server-mongodb
    hostname: ${MONGODB_HOSTNAME}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./volumes/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - ${MONGODB_PORT}:${MONGODB_PORT}
    networks:
      - ecom-network
  postgres:
    image: postgres:13.2
    container_name: ecom-postgres
    hostname: ${POSTGRES_HOSTNAME}
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    networks:
      - ecom-network
  keycloak:
    image: jboss/keycloak:latest
    container_name: ecom-keycloak
    hostname: ${KEYCLOAK_HOSTNAME}
    environment:
      DB_VENDOR: ${POSTGRES_VENDOR}
      DB_ADDR: ${POSTGRES_HOSTNAME}
      DB_DATABASE: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
    depends_on:
      - postgres
    volumes:
      - ./volumes/keycloak/imports:/opt/jboss/keycloak/imports
    command:
      - '-b 0.0.0.0 -Dkeycloak.import=/opt/jboss/keycloak/imports/realm-export.json'
    ports:
      - ${KEYCLAOK_PORT}:${KEYCLAOK_PORT}
    networks:
      - ecom-network
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: ecom-zookeeper
    hostname: ${ZOOKEEPER_HOSTNAME}
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME}
    ports:
      - ${ZOOKEEPER_CLIENT_PORT}:${ZOOKEEPER_CLIENT_PORT}
    networks:
      - ecom-network
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ecom-kafka
    hostname: ${KAFKA_HOSTNAME}
    depends_on:
      - zookeeper
    ports:
      - ${KAFKA_PORT}:${KAFKA_PORT}
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_ZOOKEEPER_CONNECT: ${ZOOKEEPER_HOSTNAME}:${ZOOKEEPER_CLIENT_PORT}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      KAFKA_INTER_BROKER_LISTENER_NAME: ${KAFKA_INTER_BROKER_LISTENER_NAME}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
    networks:
      - ecom-network
networks:
  ecom-network:
    driver: bridge